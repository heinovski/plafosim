---
kind: pipeline
type: docker
name: python3.7

steps:
  - name: test (tox) and build
    image: python:3.7-buster
    commands:
      - pip install --upgrade pip poetry tox tox-poetry-installer
      - tox -e py37
      - poetry build
  - name: install (sdist)
    image: python:3.7-buster
    commands:
      - python -m venv .venv-sdist
      - . .venv-sdist/bin/activate
      - pip install dist/plafosim-*.tar.gz
      - plafosim
  - name: install (wheel)
    image: python:3.7-buster
    commands:
      - python3 -m venv .venv-wheel
      - . .venv-wheel/bin/activate
      - pip install --upgrade wheel
      - pip install dist/plafosim-*-py3-none-any.whl
      - plafosim

---
kind: pipeline
type: docker
name: python3.8

steps:
  - name: test (tox) and build
    image: python:3.8-buster
    commands:
      - pip install --upgrade pip poetry tox tox-poetry-installer
      - tox -e py38
      - poetry build
  - name: install (sdist)
    image: python:3.8-buster
    commands:
      - python -m venv .venv-sdist
      - . .venv-sdist/bin/activate
      - pip install dist/plafosim-*.tar.gz
      - plafosim
  - name: install (wheel)
    image: python:3.8-buster
    commands:
      - python3 -m venv .venv-wheel
      - . .venv-wheel/bin/activate
      - pip install --upgrade wheel
      - pip install dist/plafosim-*-py3-none-any.whl
      - plafosim

---
kind: pipeline
type: docker
name: python3.9

steps:
  - name: test (tox) and build
    image: python:3.9-buster
    commands:
      - pip install --upgrade pip poetry tox tox-poetry-installer
      - tox -e py39
      - poetry build
  - name: install (sdist)
    image: python:3.9-buster
    commands:
      - python -m venv .venv-sdist
      - . .venv-sdist/bin/activate
      - pip install dist/plafosim-*.tar.gz
      - plafosim
  - name: install (wheel)
    image: python:3.9-buster
    commands:
      - python3 -m venv .venv-wheel
      - . .venv-wheel/bin/activate
      - pip install --upgrade wheel
      - pip install dist/plafosim-*-py3-none-any.whl
      - plafosim

---
kind: pipeline
type: docker
name: integration

steps:
  - name: integration (tox)
    image: python:3.7-buster
    commands:
      - pip install --upgrade pip poetry tox tox-poetry-installer
      - tox -e integration

trigger:
  ref:
    - refs/heads/master
    - refs/heads/develop
    - refs/pull/**
    - refs/tags/*

---
kind: pipeline
type: docker
name: execution

steps:
  - name: build
    image: python:3.7-buster
    commands:
      - pip install --upgrade pip poetry
      - poetry build
  - name: install (wheel)
    image: python:3.7-buster
    commands:
      - python3 -m venv .venv
      - . .venv/bin/activate
      - pip install --upgrade wheel
      - pip install dist/plafosim-*-py3-none-any.whl
  - name: no formation
    image: python:3.7-buster
    environment:
      SEED: ${DRONE_BUILD_NUMBER}
    commands:
      - . .venv/bin/activate
        # we are testing both vehicle types
      - plafosim --vehicles 100 --penetration 0.5 --time-limit 0.5 --random-seed $SEED
  - name: distributed formation
    image: python:3.7-buster
    environment:
      SEED: ${DRONE_BUILD_NUMBER}
    commands:
      - . .venv/bin/activate
        # we are testing both vehicle types
      - plafosim --vehicles 100 --penetration 0.5 --time-limit 0.5 --formation-algorithm SpeedPosition --formation-strategy distributed --random-seed $SEED
  - name: centralized formation (greedy)
    image: python:3.7-buster
    environment:
      SEED: ${DRONE_BUILD_NUMBER}
    commands:
      - . .venv/bin/activate
        # we are testing both vehicle types
      - plafosim --vehicles 100 --penetration 0.5 --time-limit 0.5 --formation-algorithm SpeedPosition --formation-strategy centralized --formation-centralized-kind greedy --infrastructures 1 --random-seed $SEED
  - name: centralized formation (optimal)  # still experimental
    image: python:3.7-buster
    environment:
      SEED: ${DRONE_BUILD_NUMBER}
    commands:
      - . .venv/bin/activate
        # we are testing both vehicle types
      - plafosim --vehicles 100 --penetration 0.5 --time-limit 0.5 --formation-algorithm SpeedPosition --formation-strategy centralized --formation-centralized-kind optimal --infrastructures 1 --random-seed $SEED

trigger:
  ref:
    - refs/heads/master
    - refs/heads/develop
    - refs/pull/**
    - refs/tags/*

---
kind: pipeline
type: docker
name: correctness

steps:
- name: install (poetry)
  image: python:3.7-buster
  environment:
    POETRY_VIRTUALENVS_IN_PROJECT: true
  commands:
    - pip install --upgrade pip poetry
    - poetry install
    - poetry run pip install git+https://github.com/michele-segata/plexe-pyapi.git
- name: Human
  image: dbuse/sumo-python:3.7-buster-1_6_0-slim
  commands:
    - apt update
    - apt install time
    - . .venv/bin/activate
    - ./scripts/validate-cf-model-human-single.sh
    - ./scripts/validate-cf-model-human-100.sh
- name: ACC
  image: dbuse/sumo-python:3.7-buster-1_6_0-slim
  commands:
    - apt update
    - apt install time
    - . .venv/bin/activate
    - ./scripts/validate-cf-model-acc-single.sh
    - ./scripts/validate-cf-model-acc-100.sh
- name: CACC
  image: dbuse/sumo-python:3.7-buster-1_6_0-slim
  commands:
    - apt update
    - apt install time
    - . .venv/bin/activate
    - ./scripts/validate-cf-model-cacc-100.sh
- name: data
  image: maurosoft1973/alpine-lftp
  environment:
    HOST:
      from_secret: ARTIFACTS_HOST
    USERNAME:
      from_secret: ARTIFACTS_USER
    PASSWORD:
      from_secret: ARTIFACTS_PASSWORD
    BASE_DIR:
      from_secret: ARTIFACTS_PATH
    DIR: ${DRONE_REPO}/${DRONE_BUILD_NUMBER}/${DRONE_STAGE_NAME}
  commands:
    - lftp -c "open -u $USERNAME,$PASSWORD $HOST; cd $BASE_DIR; mkdir -pf $DIR; mput -O $DIR *.csv"
- name: plots
  image: alpine/git
  commands:
    - echo "Username '$DRONE_ASKPASS_USERNAME'"
    - echo "machine webgit.ccs-labs.org login $DRONE_ASKPASS_USERNAME password $DRONE_ASKPASS_PASSWORD" > ~/.netrc
    - git clone ${DRONE_GIT_HTTP_URL/.git/.wiki.git} /wiki
    - mkdir -p /wiki/${DRONE_BRANCH}
    - cp *.png /wiki/${DRONE_BRANCH}/
    - git -C /wiki add /wiki/${DRONE_BRANCH}
    - git -C /wiki commit -m"Add validation data for ${DRONE_COMMIT_SHA:0:8} from run ${DRONE_BUILD_NUMBER}"
    - git -C /wiki push
  when:
    branch:
      - master
      - develop
    event:
      exclude:
        - pull_request

trigger:
  ref:
    - refs/heads/master
    - refs/heads/develop
    - refs/pull/**
    - refs/tags/*

---
kind: pipeline
type: docker
name: performance

steps:
- name: build
  image: python:3.7-buster
  commands:
    - pip install --upgrade pip poetry
    - poetry build
- name: install (wheel)
  image: python:3.7-buster
  commands:
    - python3 -m venv .venv
    - . .venv/bin/activate
    - pip install --upgrade wheel
    - pip install dist/plafosim-*-py3-none-any.whl
- name: Human
  image: python:3.7-buster
  commands:
    - . .venv/bin/activate
    - plafosim -q --pre-fill true --random-seed 0 --depart-desired true --time-limit 0.1 --road-length 100 --lanes 4 --density 10 --penetration 0 --depart-flow true --random-depart-position true --depart-method number
- name: ACC
  image: python:3.7-buster
  commands:
    - . .venv/bin/activate
    - plafosim -q --pre-fill true --random-seed 0 --depart-desired true --time-limit 0.1 --road-length 100 --lanes 4 --density 10 --penetration 1 --depart-flow true --random-depart-position true --depart-method number
- name: CACC
  image: python:3.7-buster
  commands:
    - . .venv/bin/activate
    - plafosim -q --pre-fill true --random-seed 0 --depart-desired true --time-limit 0.1 --road-length 100 --lanes 4 --density 10 --penetration 1 --start-as-platoon true

trigger:
  ref:
    - refs/heads/master
    - refs/heads/develop
    - refs/pull/**
    - refs/tags/*
