---
kind: pipeline
type: docker
name: syntax

steps:
- name: flake8
  image: python
  commands:
    - pip3 install --upgrade flake8
    - flake8 --ignore=E265,E266,E402,E501,W503,W504  # comments, import order, line-length, line-break binary operator*2

---
kind: pipeline
type: docker
name: tests

steps:
- name: unittests
  image: python
  commands:
    - pip3 install --upgrade tqdm
    - pip3 install --upgrade ortools
    - pip3 install --upgrade pandas
    - pip3 install --upgrade pytest
    - pip3 install --upgrade pytest-cov
    - export PYTHONPATH=$(pwd)/src
    - pytest -v --cov=plafosim tests/unit_tests

- name: coverage
  image: python
  environment:
    HOST:
      from_secret: WWW_FTP_HOST
    USERNAME:
      from_secret: WWW_FTP_USER
    PASSWORD:
      from_secret: WWW_FTP_PASSWORD
  commands:
    - pip3 install --upgrade coverage
    - pip3 install --upgrade coverage-badge
    - coverage-badge -o coverage.svg
    - apt update
    - apt install lftp
    - lftp -c "set ftp:ssl-allow no; open -u $USERNAME,$PASSWORD $HOST; put coverage.svg;"

---
kind: pipeline
type: docker
name: execution

steps:
  - name: no formation
    image: python
    environment:
      SEED: ${DRONE_BUILD_NUMBER}
    commands:
      - pip3 install --upgrade tqdm
      - pip3 install --upgrade pandas
        # we are testing both vehicle types
      - ./plafosim.py --penetration 0.5 --random-seed $SEED
  - name: distributed formation
    image: python
    environment:
      SEED: ${DRONE_BUILD_NUMBER}
    commands:
      - pip3 install --upgrade tqdm
      - pip3 install --upgrade pandas
        # we are testing both vehicle types
      - ./plafosim.py --penetration 0.5 --formation-algorithm speedposition --formation-strategy distributed --random-seed $SEED
  - name: centralized formation (greedy)
    image: python
    environment:
      SEED: ${DRONE_BUILD_NUMBER}
    commands:
      - pip3 install --upgrade tqdm
      - pip3 install --upgrade pandas
        # we are testing both vehicle types
      - ./plafosim.py --penetration 0.5 --formation-algorithm speedposition --formation-strategy centralized --formation-centralized-kind greedy --infrastructures 1 --random-seed $SEED
  - name: centralized formation (optimal)
    image: python
    environment:
      SEED: ${DRONE_BUILD_NUMBER}
    commands:
      - pip3 install --upgrade tqdm
      - pip3 install --upgrade ortools
      - pip3 install --upgrade pandas
        # we are testing both vehicle types
      - ./plafosim.py --penetration 0.5 --formation-algorithm speedposition --formation-strategy centralized --formation-centralized-kind optimal --infrastructures 1 --random-seed $SEED

trigger:
  branch:
    - master
    - develop

---
kind: pipeline
type: docker
name: correctness

image_pull_secrets:
  - dockerconfig

steps:
- name: CC
  image: dbuse/sumo-python:3.8-buster-1_1_0
  environment:
    HOST:
      from_secret: ARTIFACTS_HOST
    USERNAME:
      from_secret: ARTIFACTS_USER
    PASSWORD:
      from_secret: ARTIFACTS_PASSWORD
    BASE_DIR:
      from_secret: ARTIFACTS_PATH
    DIR: ${DRONE_REPO}/${DRONE_BUILD_NUMBER}/${DRONE_STAGE_NAME}
  commands:
    - apt update
    - apt install lftp
    - apt install time
    - pip3 install --upgrade tqdm
    - pip3 install --upgrade matplotlib
    - pip3 install --upgrade pandas
    - pip3 install --upgrade seaborn
    - pip3 install --upgrade statsmodels
    - ./scripts/test-cf-model-cc.sh 1337
    - ./scripts/test-cc-driving.sh 1337
    - lftp -c "open -u $USERNAME,$PASSWORD $HOST; cd $BASE_DIR; mkdir -pf $DIR; mput -O $DIR cc*.csv cc*.png"
- name: ACC
  image: dbuse/sumo-python:3.8-buster-1_1_0
  environment:
    HOST:
      from_secret: ARTIFACTS_HOST
    USERNAME:
      from_secret: ARTIFACTS_USER
    PASSWORD:
      from_secret: ARTIFACTS_PASSWORD
    BASE_DIR:
      from_secret: ARTIFACTS_PATH
    DIR: ${DRONE_REPO}/${DRONE_BUILD_NUMBER}/${DRONE_STAGE_NAME}
  commands:
    - apt update
    - apt install lftp
    - apt install time
    - pip3 install --upgrade tqdm
    - pip3 install --upgrade matplotlib
    - pip3 install --upgrade pandas
    - pip3 install --upgrade seaborn
    - pip3 install --upgrade statsmodels
    - ./scripts/test-cf-model-acc.sh 1337
    - ./scripts/test-acc-driving.sh 1337
    - lftp -c "open -u $USERNAME,$PASSWORD $HOST; cd $BASE_DIR; mkdir -pf $DIR; mput -O $DIR acc*.csv acc*.png"
- name: CACC
  image: dbuse/sumo-python:3.8-buster-1_6_0-slim
  environment:
    HOST:
      from_secret: ARTIFACTS_HOST
    USERNAME:
      from_secret: ARTIFACTS_USER
    PASSWORD:
      from_secret: ARTIFACTS_PASSWORD
    BASE_DIR:
      from_secret: ARTIFACTS_PATH
    DIR: ${DRONE_REPO}/${DRONE_BUILD_NUMBER}/${DRONE_STAGE_NAME}
  commands:
    - apt update
    - apt install lftp
    - apt install time
    - pip3 install --upgrade tqdm
    - pip3 install --upgrade matplotlib
    - pip3 install --upgrade pandas
    - pip3 install --upgrade seaborn
    - pip3 install --upgrade statsmodels
    - git clone --branch heinovski/plafosim-comparison-cacc --single-branch "https://$DRONE_ASKPASS_USERNAME:$DRONE_ASKPASS_PASSWORD@webgit.ccs-labs.org/git/CCS/plexe-python.git" plexe
    - pip3 install ./plexe
    - ./scripts/test-cacc-driving.sh 1337
    - lftp -c "open -u $USERNAME,$PASSWORD $HOST; cd $BASE_DIR; mkdir -pf $DIR; mput -O $DIR cacc*.csv cacc*.png"

trigger:
  branch:
    - master
    - develop
---
kind: pipeline
type: docker
name: performance

steps:
- name: profile
  image: dbuse/sumo-python:3.8-buster-1_6_0-slim
  commands:
    - apt update
    - apt install time
    - pip3 install --upgrade tqdm
    - pip3 install --upgrade pandas
    - pip3 install --upgrade ortools
    - ./plafosim.py --pre-fill true --random-seed 0 --depart-flow true --depart-desired true --time-limit 0.1 --road-length 30 --vehicles 1000 --random-depart-position true --lanes 4


trigger:
  branch:
    - master
    - develop
