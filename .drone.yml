---
kind: pipeline
type: docker
name: syntax

steps:
- name: flake8
  image: python
  commands:
    - pip3 install --upgrade flake8
    - flake8 --ignore=E265,E266,E402,E501  # comments, import order, line-length

---
kind: pipeline
type: docker
name: tests

steps:
- name: unittests
  image: python
  commands:
    - pip3 install --upgrade funcy
    - pip3 install --upgrade tqdm
    - pip3 install --upgrade pytest
    - pip3 install --upgrade pytest-cov
    - export PYTHONPATH=$(pwd)/src
    - pytest -v --cov=plafosim tests/unit_tests

- name: coverage
  image: python
  environment:
    HOST:
      from_secret: WWW_FTP_HOST
    USERNAME:
      from_secret: WWW_FTP_USER
    PASSWORD:
      from_secret: WWW_FTP_PASSWORD
  commands:
    - pip3 install --upgrade coverage
    - pip3 install --upgrade coverage-badge
    - coverage-badge -o coverage.svg
    - apt update
    - apt install lftp
    - lftp -c "set ftp:ssl-allow no; open -u $USERNAME,$PASSWORD $HOST; put coverage.svg;"

---
kind: pipeline
type: docker
name: execution

steps:
  - name: no formation
    image: python
    environment:
      SEED: ${DRONE_BUILD_NUMBER}
    commands:
      - pip3 install --upgrade funcy
      - pip3 install --upgrade tqdm
        # we are testing both vehicle types
      - ./plafosim.py --penetration 0.5 --random-seed $SEED
  - name: distributed formation
    image: python
    environment:
      SEED: ${DRONE_BUILD_NUMBER}
    commands:
      - pip3 install --upgrade funcy
      - pip3 install --upgrade tqdm
        # we are testing both vehicle types
      - ./plafosim.py --penetration 0.5 --formation-algorithm speedposition --formation-strategy distributed --random-seed $SEED
  - name: centralized formation
    image: python
    environment:
      SEED: ${DRONE_BUILD_NUMBER}
    commands:
      - pip3 install --upgrade funcy
      - pip3 install --upgrade tqdm
        # we are testing both vehicle types
      - ./plafosim.py --penetration 0.5 --formation-algorithm speedposition --formation-strategy centralized --infrastructures 1 --random-seed $SEED

trigger:
  branch:
    - master
    - develop

---
kind: pipeline
type: docker
name: correctness

steps:
- name: human
  image: dbuse/sumo-python:3.8-buster-1_1_0
  commands:
    - apt update
    - apt install time
    - pip3 install --upgrade funcy
    - pip3 install --upgrade tqdm
    - pip3 install --upgrade matplotlib
    - pip3 install --upgrade pandas
    - pip3 install --upgrade seaborn
    - pip3 install --upgrade statsmodels
    - ./scripts/test-human-driving.sh 42
- name: ACC
  image: dbuse/sumo-python:3.8-buster-1_1_0
  commands:
    - apt update
    - apt install time
    - pip3 install --upgrade funcy
    - pip3 install --upgrade tqdm
    - pip3 install --upgrade matplotlib
    - pip3 install --upgrade pandas
    - pip3 install --upgrade seaborn
    - pip3 install --upgrade statsmodels
    - ./scripts/test-acc-driving.sh 42
- name: CACC
  image: dbuse/sumo-python:3.8-buster-1_1_0
  commands:
    - apt update
    - apt install time
    - pip3 install --upgrade funcy
    - pip3 install --upgrade tqdm
    - pip3 install --upgrade matplotlib
    - pip3 install --upgrade pandas
    - pip3 install --upgrade seaborn
    - pip3 install --upgrade statsmodels
    - ./scripts/test-cacc-driving.sh 42
- name: copy artifacts
  image: dbuse/sumo-python:3.8-buster-1_1_0
  environment:
    HOST:
      from_secret: ARTIFACTS_HOST
    USERNAME:
      from_secret: ARTIFACTS_USER
    PASSWORD:
      from_secret: ARTIFACTS_PASSWORD
    BASE_DIR:
      from_secret: ARTIFACTS_PATH
    DIR: ${DRONE_REPO}/${DRONE_BUILD_NUMBER}/${DRONE_STAGE_NAME}
  commands:
    - apt update
    - apt install lftp
    - lftp -c "open -u $USERNAME,$PASSWORD $HOST; cd $BASE_DIR; mkdir -p $DIR; mput -O $DIR *.csv *.png"

trigger:
  branch:
    - master
    - develop
